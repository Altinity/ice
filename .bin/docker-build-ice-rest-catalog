#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "${BASH_SOURCE[0]}")/.."

test -n "$VERSION" || (echo 'VERSION env variable must be set' >&2; exit 1)

./mvnw -pl ice-rest-catalog validate # fail-fast

image_name=altinity/ice-rest-catalog

# TODO: s/latest/nonroot
for q in "" "debug-"; do
  docker build --platform linux/amd64 --build-arg "BASE_IMAGE_TAG=${q}latest-amd64" --build-arg "VERSION=$VERSION" -t "$image_name:$q$VERSION-amd64" -f ice-rest-catalog/Dockerfile .
  docker build --platform linux/arm64 --build-arg "BASE_IMAGE_TAG=${q}latest-arm64" --build-arg "VERSION=$VERSION" -t "$image_name:$q$VERSION-arm64" -f ice-rest-catalog/Dockerfile .
done
# TODO: :debug-with-ice

push=false
for arg in "$@"; do
  if [[ "$arg" == "--push" ]]; then
    push=true
    break
  fi
done
if ! $push; then
  echo >&2 'Skipping docker push (--push not set)'
  exit 0
fi

for q in "" "debug-"; do
  docker push "$image_name:$q$VERSION-amd64"
  docker push "$image_name:$q$VERSION-arm64"
  # `docker manifest` requires metadata from the registry, hence the `docker push`es above
  docker manifest create "$image_name:$q$VERSION" \
    --amend "$image_name:$q$VERSION-amd64" \
    --amend "$image_name:$q$VERSION-arm64"
  docker manifest push "$image_name:$q$VERSION"
done
